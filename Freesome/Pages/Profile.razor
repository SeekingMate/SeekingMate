@page "/profile"
@inject ClientData Data

<h1>Profile</h1>

<Field>
    <FieldLabel>Your Rating</FieldLabel>
    <p>Ratings will be available after you have hang out with 10 people.</p>
</Field>

<Field>
    <FieldLabel>Nickname</FieldLabel>
    <FieldHelp>Nickname is only visible to the system; It's shown on the Welcome page for greeting purpose.</FieldHelp>
    <TextEdit Text="@Data.Nickname" Placeholder="Nickname" TextChanged="@OnNicknameChanged" />
</Field>

<Field>
    <FieldLabel>Biological Sex</FieldLabel>
    <Select TValue="string" SelectedValue="@Data.Gender" SelectedValueChanged="@OnGenderChanged">
        <SelectItem TValue="string" Value="@((string)"Male")">Male</SelectItem>
        <SelectItem TValue="string" Value="@((string)"Female")">Female</SelectItem>
    </Select>
</Field>

<Field>
    <FieldLabel>Age</FieldLabel>
    <NumericPicker TValue="int" Value="@Data.Age" ValueChanged="@OnAgeChanged" />
</Field>

<Field>
    <FieldLabel>Languages</FieldLabel>
    <Select TValue="string" SelectedValues="@Data.Languages" SelectedValuesChanged="@OnLanguagesChanged" Multiple>
        <SelectItem TValue="string" Value="@((string)"Chinese")">Chinese</SelectItem>
        <SelectItem TValue="string" Value="@((string)"English")">English</SelectItem>
        <SelectItem TValue="string" Value="@((string)"Japanese")">Japanese</SelectItem>
        <SelectItem TValue="string" Value="@((string)"Korean")">Korean</SelectItem>
    </Select>
</Field>

@code {
    async void OnGenderChanged(string value)
    {
        Data.Gender = value;
        await StorageHelper.UpdateValue(nameof(Data.Gender), value);
    }
    async void OnNicknameChanged(string value)
    {
        Data.Nickname = value;
        await StorageHelper.UpdateValue(nameof(Data.Nickname), value);
    }
    async void OnAgeChanged(int value)
    {
        Data.Age = value;
        await StorageHelper.UpdateValue(nameof(Data.Nickname), value.ToString());
    }

    async void OnLanguagesChanged(IReadOnlyList<string> values)
    {
        Data.Languages = values.ToArray();
        await StorageHelper.UpdateValue(nameof(Data.Languages), string.Join(", ", values));
    }
}
